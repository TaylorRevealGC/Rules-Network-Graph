id,name,description,data,active,share_flag,created_by,modified_by,deleted_by,created_at,modified_at,deleted_at,rvs,type,parsed_rule
238,Set review flag for estab,"

If TYPOP_CODE_STAT == '4X' and RCPT_COMSN_GSV_VAL + RCPT_OWN_VAL != RCPT_TOT_VAL, then a message will be sent to set the review flag for ESTAB and track the fact [""TYPOP_CODE_STAT""]. The action to be taken if the rule is successful is ""Set Review for Flag"" with a priority of 5 on a scale of 1-10. No API has been defined for this rule, which was created on Mon Jan 23 2023 09:51:49 GMT-0500 (Eastern Standard Time).","{""event"": {""name"": ""Set review flag for estab"", ""type"": 238, ""active"": true, ""params"": {""action"": [{""Action"": ""\""Set Review for Flag\""""}], ""message"": ""Setting the review flag for ESTAB."", ""rvsJSON"": [""TYPOP_CODE_STAT""], ""apiSource"": {}, ""actionType"": ""impute"", ""apiChecked"": false}, ""ruleId"": 238, ""actionType"": ""impute"", ""rulePriority"": ""5"", ""validationType"": ""estab""}, ""index"": -1, ""conditions"": {""all"": [{""fact"": ""checkCondition"", ""path"": ""$.value"", ""value"": true, ""params"": {""conditionstring"": ""TYPOP_CODE_STAT == '4X' and RCPT_COMSN_GSV_VAL + RCPT_OWN_VAL != RCPT_TOT_VAL""}, ""operator"": ""equal""}]}}",TRUE,NULL,NULL,NULL,NULL,52:23.5,52:23.5,NULL,NULL,estab,"{""event"": {""name"": ""Set review flag for estab"", ""type"": 238, ""active"": true, ""params"": {""action"": [{""Action"": ""\""Set Review for Flag\""""}], ""message"": ""Setting the review flag for ESTAB."", ""rvsJSON"": [""TYPOP_CODE_STAT""], ""apiSource"": {}, ""actionType"": ""impute"", ""apiChecked"": false}, ""ruleId"": 238, ""actionType"": ""impute"", ""rulePriority"": ""5"", ""validationType"": ""estab""}, ""index"": -1, ""conditions"": {""all"": [{""fact"": ""checkCondition"", ""path"": ""$.value"", ""value"": true, ""params"": {""conditionstring"": ""TYPOP_CODE_STAT == '4X' and RCPT_COMSN_GSV_VAL + RCPT_OWN_VAL != RCPT_TOT_VAL""}, ""operator"": ""equal""}]}}"
176,"#9: If total inventory doesn't equal the sum of LIFO and non-LIFO, analyst review","<h2>Rule Definition: #9: If total inventory doesn't equal the sum of LIFO and non-LIFO, analyst review</h2><p><br></p><p> If the value of INV_CY_TOT does not equal the sum of INV_CY_LIFO_VAL and INV_CY_NONLIFO_TOT, then a message should be sent to set a review flag and track the facts PAY_ANN. Additionally, the action RCPT_TOT should be performed. This rule is of type KAU, and has a priority of 5 on a scale of 1 to 10. No API has been defined.</p>","{""event"": {""name"": ""#9: If total inventory doesn't equal the sum of LIFO and non-LIFO, analyst review"", ""type"": 176, ""active"": true, ""params"": {""rvs"": ""[\""PAY_ANN\""]"", ""action"": [{""RCPT_TOT"": ""RCPT_TOT""}], ""message"": ""Set review flag"", ""rvsJSON"": [""PAY_ANN""], ""apiSource"": {}, ""actionType"": ""impute"", ""apiChecked"": false}, ""ruleId"": 176, ""actionType"": ""impute"", ""rulePriority"": ""5"", ""validationType"": ""KAU""}, ""index"": -1, ""conditions"": {""all"": [{""fact"": ""checkCondition"", ""path"": ""$.value"", ""value"": true, ""params"": {""conditionstring"": ""INV_CY_TOT != sum(INV_CY_LIFO_VAL, INV_CY_NONLIFO_TOT)""}, ""operator"": ""equal""}]}}",TRUE,NULL,NULL,NULL,NULL,20:17.3,20:17.4,NULL,NULL,KAU,"{""event"": {""name"": ""#9: If total inventory doesn't equal the sum of LIFO and non-LIFO, analyst review"", ""type"": 176, ""active"": true, ""params"": {""rvs"": ""[\""PAY_ANN\""]"", ""action"": [{""RCPT_TOT"": ""RCPT_TOT""}], ""message"": ""Set review flag"", ""rvsJSON"": [""PAY_ANN""], ""apiSource"": {}, ""actionType"": ""impute"", ""apiChecked"": false}, ""ruleId"": 176, ""actionType"": ""impute"", ""rulePriority"": ""5"", ""validationType"": ""KAU""}, ""index"": -1, ""conditions"": {""all"": [{""fact"": ""checkCondition"", ""path"": ""$.value"", ""value"": true, ""params"": {""conditionstring"": ""INV_CY_TOT != sum(INV_CY_LIFO_VAL, INV_CY_NONLIFO_TOT)""}, ""operator"": ""equal""}]}}"
167,Getting substrings from variables and strings.,"<h2>Rule Definition: Getting substrings from variables and strings.</h2><p><br></p><p>This rule is a simple rule with a priority of 5 on a scale of 1-10 that states: If RCPT_TOT is greater than 0, display a message and track the facts of PAY_ANN. Additionally, perform the substrFunction action of substr(name1, 0, 10). No API has been defined.</p>","{""event"": {""name"": ""Getting substrings from variables and strings."", ""type"": ""167"", ""active"": true, ""params"": {""rvs"": ""[\""PAY_ANN\""]"", ""action"": [{""substrFunction"": ""substr(name1, 0, 10)""}], ""message"": ""Enter the message you want to display... . Some initial conditions have been pre-defined."", ""rvsJSON"": [""PAY_ANN""], ""apiSource"": {}, ""actionType"": ""impute"", ""apiChecked"": false}, ""ruleId"": 167, ""actionType"": ""impute"", ""rulePriority"": ""5"", ""validationType"": ""Getting Started""}, ""index"": -1, ""conditions"": {""all"": [{""fact"": ""checkCondition"", ""path"": ""$.value"", ""value"": true, ""params"": {""conditionstring"": ""RCPT_TOT > 0""}, ""operator"": ""equal""}]}}",TRUE,NULL,NULL,NULL,NULL,24:56.5,22:09.4,NULL,NULL,Getting Started,"{""event"": {""name"": ""Getting substrings from variables and strings."", ""type"": ""167"", ""active"": true, ""params"": {""rvs"": ""[\""PAY_ANN\""]"", ""action"": [{""substrFunction"": ""substr(name1, 0, 10)""}], ""message"": ""Enter the message you want to display... . Some initial conditions have been pre-defined."", ""rvsJSON"": [""PAY_ANN""], ""apiSource"": {}, ""actionType"": ""impute"", ""apiChecked"": false}, ""ruleId"": 167, ""actionType"": ""impute"", ""rulePriority"": ""5"", ""validationType"": ""Getting Started""}, ""index"": -1, ""conditions"": {""all"": [{""fact"": ""checkCondition"", ""path"": ""$.value"", ""value"": true, ""params"": {""conditionstring"": ""RCPT_TOT > 0""}, ""operator"": ""equal""}]}}"
256,Hazardous Material,,"{""event"": {""name"": ""Hazardous Material"", ""type"": 256, ""active"": true, ""params"": {""action"": [{""RCPT_MOTR_HAZRD_STAT"": ""2""}], ""message"": ""Hazardous Material rule fired"", ""rvsJSON"": [""PAY_ANN""], ""apiSource"": {}, ""actionType"": ""impute"", ""apiChecked"": false}, ""ruleId"": 256, ""actionType"": ""impute"", ""rulePriority"": ""5"", ""validationType"": ""new""}, ""index"": -1, ""conditions"": {""all"": [{""fact"": ""checkCondition"", ""path"": ""$.value"", ""value"": true, ""params"": {""conditionstring"": ""substr(RECORD_NAICS_NUM, 1,3)== 484 and RCPT_MOTR_HAZRD_STAT == 1 and RCPT_MOTR_HAZRD_PCT == 0 ""}, ""operator"": ""equal""}]}}",TRUE,NULL,NULL,NULL,NULL,26:27.3,28:08.8,NULL,NULL,new,"{""event"": {""name"": ""Hazardous Material"", ""type"": 256, ""active"": true, ""params"": {""action"": [{""RCPT_MOTR_HAZRD_STAT"": ""2""}], ""message"": ""Hazardous Material rule fired"", ""rvsJSON"": [""PAY_ANN""], ""apiSource"": {}, ""actionType"": ""impute"", ""apiChecked"": false}, ""ruleId"": 256, ""actionType"": ""impute"", ""rulePriority"": ""5"", ""validationType"": ""new""}, ""index"": -1, ""conditions"": {""all"": [{""fact"": ""checkCondition"", ""path"": ""$.value"", ""value"": true, ""params"": {""conditionstring"": ""substr(RECORD_NAICS_NUM, 1,3)== 484 and RCPT_MOTR_HAZRD_STAT == 1 and RCPT_MOTR_HAZRD_PCT == 0 ""}, ""operator"": ""equal""}]}}"
100,VALIDATE_RCPT_TOT_IS_UNSIGNED_INTEGER,<p>RCPT_TOT must be greater than 0</p>,"{""event"": {""name"": ""VALIDATE_RCPT_TOT_IS_UNSIGNED_INTEGER"", ""type"": ""100"", ""active"": true, ""params"": {""rvs"": ""[\""RCPT_TOT\""]"", ""action"": [{""RCPT_TOT"": ""RCPT_TOT""}], ""message"": ""RCPT_TOT has a non zero value."", ""rvsJSON"": [""RCPT_TOT""], ""apiSource"": {}, ""actionType"": ""notify"", ""apiChecked"": false}, ""ruleId"": 100, ""actionType"": ""notify"", ""rulePriority"": ""5"", ""validationType"": ""validation""}, ""index"": -1, ""conditions"": {""all"": [{""fact"": ""checkCondition"", ""path"": ""$.value"", ""value"": true, ""params"": {""conditionstring"": ""RCPT_TOT > 0 ""}, ""operator"": ""equal""}]}}",TRUE,NULL,NULL,NULL,NULL,00:25.5,24:50.8,NULL,NULL,validation,"{""event"": {""name"": ""VALIDATE_RCPT_TOT_IS_UNSIGNED_INTEGER"", ""type"": ""100"", ""active"": true, ""params"": {""rvs"": ""[\""RCPT_TOT\""]"", ""action"": [{""RCPT_TOT"": ""RCPT_TOT""}], ""message"": ""RCPT_TOT has a non zero value."", ""rvsJSON"": [""RCPT_TOT""], ""apiSource"": {}, ""actionType"": ""notify"", ""apiChecked"": false}, ""ruleId"": 100, ""actionType"": ""notify"", ""rulePriority"": ""5"", ""validationType"": ""validation""}, ""index"": -1, ""conditions"": {""all"": [{""fact"": ""checkCondition"", ""path"": ""$.value"", ""value"": true, ""params"": {""conditionstring"": ""RCPT_TOT > 0 ""}, ""operator"": ""equal""}]}}"
168,Business aggregations for PAY_ANN using averages.,"<h2>Rule Definition: Business aggregations for PAY_ANN using averages.</h2><p><br></p><p>If agg(""PAY_ANN"", ""state = 'MD'"", 'avg') is less than agg(""PAY_ANN"", ""state = 'VA'"", 'avg') then a message should be sent.</p>","{""event"": {""name"": ""Business aggregations for PAY_ANN using averages."", ""type"": ""168"", ""active"": true, ""params"": {""rvs"": ""[\""PAY_ANN\"",\""CAPEX_BUILD_USED\"",\""CAPEX_NEW_TOT\""]"", ""action"": [{""PAY_ANN_MD_SUM"": ""agg(\""PAY_ANN\"", \""state = 'MD'\"")""}, {""PAY_ANN_VA_SUM"": ""agg(\""PAY_ANN\"", \""state = 'VA'\"")""}, {""PAY_ANN_MD_AVG"": ""agg(\""PAY_ANN\"", \""state = 'MD'\"", \""avg\"")""}, {""PAY_ANN_VA_AVG"": ""agg(\""PAY_ANN\"", \""state = 'VA'\"", \""avg\"")""}, {""PAY_ANN_PLUS_100"": ""PAY_ANN + 1000""}, {""PAY_ANN"": ""PAY_ANN""}], ""message"": ""Aggregating with agg(\""PAY_ANN\"", \""state = 'MD'\"") will do a computation and agg(\""PAY_ANN\"", \""state = 'MD'\"", 'avg') will compute the average"", ""rvsJSON"": [""PAY_ANN"", ""CAPEX_BUILD_USED"", ""CAPEX_NEW_TOT""], ""apiSource"": {}, ""actionType"": ""impute"", ""apiChecked"": false}, ""ruleId"": 168, ""actionType"": ""impute"", ""rulePriority"": ""5"", ""validationType"": ""Business Aggregation""}, ""index"": -1, ""conditions"": {""all"": [{""fact"": ""checkCondition"", ""path"": ""$.value"", ""value"": true, ""params"": {""conditionstring"": ""agg(\""PAY_ANN\"", \""state = 'MD'\"") < agg(\""PAY_ANN\"", \""state = 'VA'\"")""}, ""operator"": ""equal""}]}}",TRUE,NULL,NULL,NULL,NULL,39:29.3,14:03.1,NULL,NULL,Business Aggregation,"{""event"": {""name"": ""Business aggregations for PAY_ANN using averages."", ""type"": ""168"", ""active"": true, ""params"": {""rvs"": ""[\""PAY_ANN\"",\""CAPEX_BUILD_USED\"",\""CAPEX_NEW_TOT\""]"", ""action"": [{""PAY_ANN_MD_SUM"": ""agg(\""PAY_ANN\"", \""state = 'MD'\"")""}, {""PAY_ANN_VA_SUM"": ""agg(\""PAY_ANN\"", \""state = 'VA'\"")""}, {""PAY_ANN_MD_AVG"": ""agg(\""PAY_ANN\"", \""state = 'MD'\"", \""avg\"")""}, {""PAY_ANN_VA_AVG"": ""agg(\""PAY_ANN\"", \""state = 'VA'\"", \""avg\"")""}, {""PAY_ANN_PLUS_100"": ""PAY_ANN + 1000""}, {""PAY_ANN"": ""PAY_ANN""}], ""message"": ""Aggregating with agg(\""PAY_ANN\"", \""state = 'MD'\"") will do a computation and agg(\""PAY_ANN\"", \""state = 'MD'\"", 'avg') will compute the average"", ""rvsJSON"": [""PAY_ANN"", ""CAPEX_BUILD_USED"", ""CAPEX_NEW_TOT""], ""apiSource"": {}, ""actionType"": ""impute"", ""apiChecked"": false}, ""ruleId"": 168, ""actionType"": ""impute"", ""rulePriority"": ""5"", ""validationType"": ""Business Aggregation""}, ""index"": -1, ""conditions"": {""all"": [{""fact"": ""checkCondition"", ""path"": ""$.value"", ""value"": true, ""params"": {""conditionstring"": ""agg(\""PAY_ANN\"", \""state = 'MD'\"") < agg(\""PAY_ANN\"", \""state = 'VA'\"")""}, ""operator"": ""equal""}]}}"
177,If ecommerce status = 2 (no) then the value for e-commerce should be 0,"<h2>Rule Definition: If ecommerce status = 2 (no) then the value for e-commerce should be 0</h2><p><br></p><p> This is a KAU (Knowledge Automation Unit) rule with a priority of 5 on a scale of 1-10. If RCPT_ECOMM_STAT == 2, then a message should be displayed that states: ""Some initial conditions have been pre-defined."" and track the facts [""PAY_ANN""]. The following action should also be performed: {""RCPT_ECOMM_VAL "":""0""}. No API has been defined for this rule.</p>","{""event"": {""name"": ""If ecommerce status = 2 (no) then the value for e-commerce should be 0"", ""type"": ""177"", ""active"": true, ""params"": {""rvs"": ""[\""PAY_ANN\""]"", ""action"": [{""RCPT_ECOMM_VAL "": ""0""}], ""message"": ""Enter the message you want to display... . Some initial conditions have been pre-defined."", ""rvsJSON"": [""PAY_ANN""], ""apiSource"": {}, ""actionType"": ""impute"", ""apiChecked"": false}, ""ruleId"": 177, ""actionType"": ""impute"", ""rulePriority"": ""5"", ""validationType"": ""KAU""}, ""index"": -1, ""conditions"": {""all"": [{""fact"": ""checkCondition"", ""path"": ""$.value"", ""value"": true, ""params"": {""conditionstring"": ""RCPT_ECOMM_STAT == 2 ""}, ""operator"": ""equal""}]}}",TRUE,NULL,NULL,NULL,NULL,23:32.5,24:38.9,NULL,NULL,KAU,"{""event"": {""name"": ""If ecommerce status = 2 (no) then the value for e-commerce should be 0"", ""type"": ""177"", ""active"": true, ""params"": {""rvs"": ""[\""PAY_ANN\""]"", ""action"": [{""RCPT_ECOMM_VAL "": ""0""}], ""message"": ""Enter the message you want to display... . Some initial conditions have been pre-defined."", ""rvsJSON"": [""PAY_ANN""], ""apiSource"": {}, ""actionType"": ""impute"", ""apiChecked"": false}, ""ruleId"": 177, ""actionType"": ""impute"", ""rulePriority"": ""5"", ""validationType"": ""KAU""}, ""index"": -1, ""conditions"": {""all"": [{""fact"": ""checkCondition"", ""path"": ""$.value"", ""value"": true, ""params"": {""conditionstring"": ""RCPT_ECOMM_STAT == 2 ""}, ""operator"": ""equal""}]}}"
236,If respondent reports they do not use LIFO for inventory valuation,"<p>If the respondent reports that they do not use LIFO for inventory valuation, then set the INV_LIFO_VAL to 0 and track the values of INV_LIFO_VAL and INV_LIFO_STAT. This rule has a priority of 5 on a scale of 1-10, and was created on Mon Jan 23 2023 09:42:40 GMT-0500 (Eastern Standard Time). No API has been defined for this rule.</p>","{""event"": {""name"": ""If respondent reports they do not use LIFO for inventory valuation"", ""type"": ""236"", ""active"": true, ""params"": {""rvs"": ""[\"" INV_LIFO_VAL\"",\""  INV_LIFO_STAT\""]"", ""action"": [{""\nINV_LIFO_VAL "": "" 0""}], ""message"": ""If respondent reports they do not use LIFO for inventory valuation, then set the value on inventories using the LIFO method to 0"", ""rvsJSON"": ["" INV_LIFO_VAL"", ""  INV_LIFO_STAT""], ""apiSource"": {}, ""actionType"": ""impute"", ""apiChecked"": false}, ""ruleId"": 236, ""actionType"": ""impute"", ""rulePriority"": ""5"", ""validationType"": ""KAU""}, ""index"": -1, ""conditions"": {""all"": [{""fact"": ""checkCondition"", ""path"": ""$.value"", ""value"": true, ""params"": {""conditionstring"": ""INV_LIFO_STAT != 0""}, ""operator"": ""equal""}]}}",TRUE,NULL,NULL,NULL,NULL,43:13.2,48:35.2,NULL,NULL,KAU,"{""event"": {""name"": ""If respondent reports they do not use LIFO for inventory valuation"", ""type"": ""236"", ""active"": true, ""params"": {""rvs"": ""[\"" INV_LIFO_VAL\"",\""  INV_LIFO_STAT\""]"", ""action"": [{""\nINV_LIFO_VAL "": "" 0""}], ""message"": ""If respondent reports they do not use LIFO for inventory valuation, then set the value on inventories using the LIFO method to 0"", ""rvsJSON"": ["" INV_LIFO_VAL"", ""  INV_LIFO_STAT""], ""apiSource"": {}, ""actionType"": ""impute"", ""apiChecked"": false}, ""ruleId"": 236, ""actionType"": ""impute"", ""rulePriority"": ""5"", ""validationType"": ""KAU""}, ""index"": -1, ""conditions"": {""all"": [{""fact"": ""checkCondition"", ""path"": ""$.value"", ""value"": true, ""params"": {""conditionstring"": ""INV_LIFO_STAT != 0""}, ""operator"": ""equal""}]}}"
242,"if they reported sales as commissions, set sales = GSV","

If the initial conditions are met, display the message: ""Please adjust the sales value to match the GSV value"".

Track the facts [""PAY_ANN""].

Upon successful rule execution, set RCPT_TOT = RCPT_TOT.

Priority: 5/10

No API has been defined.

Created at: Mon Jan 23 2023 11:58:00 GMT-0500 (Eastern Standard Time)","{""event"": {""name"": ""if they reported sales as commissions, set sales = GSV"", ""type"": 242, ""active"": true, ""params"": {""action"": [{""RCPT_TOT_VAL "": "" RCPT_COMSN_GSV_VAL""}], ""message"": ""if they reported sales as commissions, set sales = GSV"", ""rvsJSON"": [""RCPT_COMSN_GSV_VAL "", "" RCPT_TOT_VAL "", "" RCPT_TOT_VAL "", "" RCPT_COMSN_EARN_VAL""], ""apiSource"": {}, ""actionType"": ""impute"", ""apiChecked"": false}, ""ruleId"": 242, ""actionType"": ""impute"", ""rulePriority"": ""5"", ""validationType"": ""estab""}, ""index"": -1, ""conditions"": {""all"": [{""fact"": ""checkCondition"", ""path"": ""$.value"", ""value"": true, ""params"": {""conditionstring"": ""TYPOP_CODE_STAT == '4X' and RCPT_OWN_VAL == 0 and RCPT_COMSN_GSV_VAL != RCPT_TOT_VAL and RCPT_COMSN_GSV_VAL > RCPT_TOT_VAL and RCPT_TOT_VAL == RCPT_COMSN_EARN_VAL""}, ""operator"": ""equal""}]}}",TRUE,NULL,NULL,NULL,NULL,59:30.9,59:31.0,NULL,NULL,estab,"{""event"": {""name"": ""if they reported sales as commissions, set sales = GSV"", ""type"": 242, ""active"": true, ""params"": {""action"": [{""RCPT_TOT_VAL "": "" RCPT_COMSN_GSV_VAL""}], ""message"": ""if they reported sales as commissions, set sales = GSV"", ""rvsJSON"": [""RCPT_COMSN_GSV_VAL "", "" RCPT_TOT_VAL "", "" RCPT_TOT_VAL "", "" RCPT_COMSN_EARN_VAL""], ""apiSource"": {}, ""actionType"": ""impute"", ""apiChecked"": false}, ""ruleId"": 242, ""actionType"": ""impute"", ""rulePriority"": ""5"", ""validationType"": ""estab""}, ""index"": -1, ""conditions"": {""all"": [{""fact"": ""checkCondition"", ""path"": ""$.value"", ""value"": true, ""params"": {""conditionstring"": ""TYPOP_CODE_STAT == '4X' and RCPT_OWN_VAL == 0 and RCPT_COMSN_GSV_VAL != RCPT_TOT_VAL and RCPT_COMSN_GSV_VAL > RCPT_TOT_VAL and RCPT_TOT_VAL == RCPT_COMSN_EARN_VAL""}, ""operator"": ""equal""}]}}"
237,"if lifo status is ""no"" but there's a value for LIFO_VAL or the lifo reserve","<p>If INV_LIFO_STAT != 1 and (INV_LIFO_VAL &gt; 0 or INV_LIFO_RSV_VAL &gt; 0) then send a message: ""Set the yes/no to 'yes' and track these facts: [INV_LIFO_STAT]. Also, perform the following actions, if the rule is successful: INV_LIFO_STAT = 1."" This rule has a priority of 5 on a scale of 1-10, and was created on Mon Jan 23 2023 09:45:58 GMT-0500 (Eastern Standard Time). No API has been defined for this rule.</p>","{""event"": {""name"": ""if lifo status is \""no\"" but there's a value for LIFO_VAL or the lifo reserve"", ""type"": ""237"", ""active"": true, ""params"": {""rvs"": ""[\""INV_LIFO_STAT\""]"", ""action"": [{""INV_LIFO_STAT "": "" 1""}], ""message"": ""if lifo status is \""no\"" but there's a value for LIFO_VAL or the lifo reserve, set the yes/no to \""yes\"""", ""rvsJSON"": [""INV_LIFO_STAT""], ""apiSource"": {}, ""actionType"": ""impute"", ""apiChecked"": false}, ""ruleId"": 237, ""actionType"": ""impute"", ""rulePriority"": ""5"", ""validationType"": ""KAU""}, ""index"": -1, ""conditions"": {""all"": [{""fact"": ""checkCondition"", ""path"": ""$.value"", ""value"": true, ""params"": {""conditionstring"": ""INV_LIFO_STAT != 1 and (INV_LIFO_VAL > 0 or INV_LIFO_RSV_VAL > 0)""}, ""operator"": ""equal""}]}}",TRUE,NULL,NULL,NULL,NULL,46:20.7,48:17.3,NULL,NULL,KAU,"{""event"": {""name"": ""if lifo status is \""no\"" but there's a value for LIFO_VAL or the lifo reserve"", ""type"": ""237"", ""active"": true, ""params"": {""rvs"": ""[\""INV_LIFO_STAT\""]"", ""action"": [{""INV_LIFO_STAT "": "" 1""}], ""message"": ""if lifo status is \""no\"" but there's a value for LIFO_VAL or the lifo reserve, set the yes/no to \""yes\"""", ""rvsJSON"": [""INV_LIFO_STAT""], ""apiSource"": {}, ""actionType"": ""impute"", ""apiChecked"": false}, ""ruleId"": 237, ""actionType"": ""impute"", ""rulePriority"": ""5"", ""validationType"": ""KAU""}, ""index"": -1, ""conditions"": {""all"": [{""fact"": ""checkCondition"", ""path"": ""$.value"", ""value"": true, ""params"": {""conditionstring"": ""INV_LIFO_STAT != 1 and (INV_LIFO_VAL > 0 or INV_LIFO_RSV_VAL > 0)""}, ""operator"": ""equal""}]}}"
244,if ecommerce status = 2 (no) then the value for e-commerce should be 0,"

If the RCPT_ECOMM_STAT value is equal to 2, then set the RCPT_ECOMM_VAL to 0 and track the ""RCPT_ECOMM_STAT"" fact. This rule has a priority of 5 on a scale of 1-10, and was created on Mon Jan 23 2023 12:12:32 GMT-0500 (Eastern Standard Time). No API has been defined for this rule.","{""event"": {""name"": ""if ecommerce status = 2 (no) then the value for e-commerce should be 0"", ""type"": 244, ""active"": true, ""params"": {""action"": [{""RCPT_ECOMM_VAL "": "" 0""}], ""message"": ""if ecommerce status = 2 (no) then the value for e-commerce should be 0"", ""rvsJSON"": [""RCPT_ECOMM_STAT""], ""apiSource"": {}, ""actionType"": ""impute"", ""apiChecked"": false}, ""ruleId"": 244, ""actionType"": ""impute"", ""rulePriority"": ""5"", ""validationType"": ""KAU""}, ""index"": -1, ""conditions"": {""all"": [{""fact"": ""checkCondition"", ""path"": ""$.value"", ""value"": true, ""params"": {""conditionstring"": ""RCPT_ECOMM_STAT == 2 ""}, ""operator"": ""equal""}]}}",TRUE,NULL,NULL,NULL,NULL,12:51.4,12:51.4,NULL,NULL,KAU,"{""event"": {""name"": ""if ecommerce status = 2 (no) then the value for e-commerce should be 0"", ""type"": 244, ""active"": true, ""params"": {""action"": [{""RCPT_ECOMM_VAL "": "" 0""}], ""message"": ""if ecommerce status = 2 (no) then the value for e-commerce should be 0"", ""rvsJSON"": [""RCPT_ECOMM_STAT""], ""apiSource"": {}, ""actionType"": ""impute"", ""apiChecked"": false}, ""ruleId"": 244, ""actionType"": ""impute"", ""rulePriority"": ""5"", ""validationType"": ""KAU""}, ""index"": -1, ""conditions"": {""all"": [{""fact"": ""checkCondition"", ""path"": ""$.value"", ""value"": true, ""params"": {""conditionstring"": ""RCPT_ECOMM_STAT == 2 ""}, ""operator"": ""equal""}]}}"
63,VALIDATE_PAY_ANN_BIGGER_THAN,Validate that PAY_ANN is bigger than 10000,"{""event"": {""name"": ""VALIDATE_PAY_ANN_BIGGER_THAN"", ""type"": ""63"", ""active"": true, ""params"": {""rvs"": ""[\""PAY_ANN\""]"", ""action"": [], ""message"": ""PAY_ANN must be greater than $10,000"", ""rvsJSON"": [""PAY_ANN""], ""apiSource"": {}, ""actionType"": ""impute"", ""apiChecked"": false}, ""ruleId"": 63, ""actionType"": ""impute"", ""rulePriority"": ""7"", ""validationType"": ""validation""}, ""index"": -1, ""conditions"": {""all"": [{""fact"": ""checkCondition"", ""path"": ""$.value"", ""value"": true, ""params"": {""conditionstring"": ""PAY_ANN > 10000""}, ""operator"": ""equal""}]}}",TRUE,NULL,NULL,NULL,NULL,10:54.4,54:51.4,NULL,NULL,validation,"{""event"": {""name"": ""VALIDATE_PAY_ANN_BIGGER_THAN"", ""type"": ""63"", ""active"": true, ""params"": {""rvs"": ""[\""PAY_ANN\""]"", ""action"": [], ""message"": ""PAY_ANN must be greater than $10,000"", ""rvsJSON"": [""PAY_ANN""], ""apiSource"": {}, ""actionType"": ""impute"", ""apiChecked"": false}, ""ruleId"": 63, ""actionType"": ""impute"", ""rulePriority"": ""7"", ""validationType"": ""validation""}, ""index"": -1, ""conditions"": {""all"": [{""fact"": ""checkCondition"", ""path"": ""$.value"", ""value"": true, ""params"": {""conditionstring"": ""PAY_ANN > 10000""}, ""operator"": ""equal""}]}}"
166,Tutorial Concat Strings: Example of how to concat strings,"<h2>Rule Definition: Tutorial Concat Strings: Example of how to concat strings</h2><p><br></p><p>This rule tutorial explains how to concatenate strings by displaying a message when RCPT_TOT is greater than 0. The message to be displayed is determined by the user. Some initial conditions have been pre-defined and the facts to be tracked are PAY_ANN, CAPEX_ASSET_DEPR, CAPEX_BUILD_NEW, and CAPEX_SOFTWARE_VAL. An action to concatenate variables and strings is also performed. This rule has been categorized as a new rule with a priority of 5 on a scale of 1-10 and does not require an API.</p>","{""event"": {""name"": ""Tutorial Concat Strings: Example of how to concat strings"", ""type"": ""166"", ""active"": true, ""params"": {""rvs"": ""[\""PAY_ANN\"",\""CAPEX_ASSET_DEPR\"",\""CAPEX_BUILD_NEW\"",\""CAPEX_SOFTWARE_VAL\""]"", ""action"": [{""ConcatVariablesAndStrings"": ""concat(\""Reporting ID is: \"", reporting_id)""}], ""message"": ""Enter the message you want to display... . Some initial conditions have been pre-defined."", ""rvsJSON"": [""PAY_ANN"", ""CAPEX_ASSET_DEPR"", ""CAPEX_BUILD_NEW"", ""CAPEX_SOFTWARE_VAL""], ""apiSource"": {}, ""actionType"": ""impute"", ""apiChecked"": false}, ""ruleId"": 166, ""actionType"": ""impute"", ""rulePriority"": ""5"", ""validationType"": ""Getting Started""}, ""index"": -1, ""conditions"": {""all"": [{""fact"": ""checkCondition"", ""path"": ""$.value"", ""value"": true, ""params"": {""conditionstring"": ""RCPT_TOT > 0""}, ""operator"": ""equal""}]}}",TRUE,NULL,NULL,NULL,NULL,42:42.3,23:20.9,NULL,NULL,Getting Started,"{""event"": {""name"": ""Tutorial Concat Strings: Example of how to concat strings"", ""type"": ""166"", ""active"": true, ""params"": {""rvs"": ""[\""PAY_ANN\"",\""CAPEX_ASSET_DEPR\"",\""CAPEX_BUILD_NEW\"",\""CAPEX_SOFTWARE_VAL\""]"", ""action"": [{""ConcatVariablesAndStrings"": ""concat(\""Reporting ID is: \"", reporting_id)""}], ""message"": ""Enter the message you want to display... . Some initial conditions have been pre-defined."", ""rvsJSON"": [""PAY_ANN"", ""CAPEX_ASSET_DEPR"", ""CAPEX_BUILD_NEW"", ""CAPEX_SOFTWARE_VAL""], ""apiSource"": {}, ""actionType"": ""impute"", ""apiChecked"": false}, ""ruleId"": 166, ""actionType"": ""impute"", ""rulePriority"": ""5"", ""validationType"": ""Getting Started""}, ""index"": -1, ""conditions"": {""all"": [{""fact"": ""checkCondition"", ""path"": ""$.value"", ""value"": true, ""params"": {""conditionstring"": ""RCPT_TOT > 0""}, ""operator"": ""equal""}]}}"
178,If Total operating revenue is missing...,"<h2>Rule Definition: Creating a new rule. Change its name....</h2><p><br></p><p>This rule is named ""Send Message if RCPT_TOT is Greater Than 0"". It will display the message ""Enter the message you want to display..."" when RCPT_TOT is greater than 0. It will also track the fact ""PAY_ANN"" and perform the action of setting RCPT_TOT to itself. This rule is of type ""new"" and has a rule priority of 5 on a scale of 1-10. No API has been defined.</p>","{""event"": {""name"": ""If Total operating revenue is missing..."", ""type"": ""178"", ""active"": true, ""params"": {""rvs"": ""[\""PAY_ANN\""]"", ""action"": [{""RCPT_ECOMM_STAT"": ""1""}], ""message"": ""If Total operating revenue is missing and QSS # of imputed quarters is equal to zero, and qss revenue is greater than zero, then set total operating revenue equal to qss revenue"", ""rvsJSON"": [""PAY_ANN""], ""apiSource"": {}, ""actionType"": ""impute"", ""apiChecked"": false}, ""ruleId"": 178, ""actionType"": ""impute"", ""rulePriority"": ""5"", ""validationType"": ""KAU""}, ""index"": -1, ""conditions"": {""all"": [{""fact"": ""checkCondition"", ""path"": ""$.value"", ""value"": true, ""params"": {""conditionstring"": ""RCPT_TOT > 0""}, ""operator"": ""equal""}]}}",TRUE,NULL,NULL,NULL,NULL,29:43.6,31:03.0,NULL,NULL,KAU,"{""event"": {""name"": ""If Total operating revenue is missing..."", ""type"": ""178"", ""active"": true, ""params"": {""rvs"": ""[\""PAY_ANN\""]"", ""action"": [{""RCPT_ECOMM_STAT"": ""1""}], ""message"": ""If Total operating revenue is missing and QSS # of imputed quarters is equal to zero, and qss revenue is greater than zero, then set total operating revenue equal to qss revenue"", ""rvsJSON"": [""PAY_ANN""], ""apiSource"": {}, ""actionType"": ""impute"", ""apiChecked"": false}, ""ruleId"": 178, ""actionType"": ""impute"", ""rulePriority"": ""5"", ""validationType"": ""KAU""}, ""index"": -1, ""conditions"": {""all"": [{""fact"": ""checkCondition"", ""path"": ""$.value"", ""value"": true, ""params"": {""conditionstring"": ""RCPT_TOT > 0""}, ""operator"": ""equal""}]}}"
183,Time Based rules setup from Quick Add,"

If 1 == 1, then send a message with a priority of 7 on a scale of 1-10, 'Checking time', and track the facts [""PAY_ANN""]. If the rule is successful, perform the following actions: getTime(""hms"") to get the hours, getTime(""m"") to get the minutes, and getTime(""s"") to get the seconds. This rule was created at Wed Jan 18 2023 18:18:16 GMT-0500 (Eastern Standard Time). No api has been defined.","{""event"": {""name"": ""Time Based rules setup from Quick Add"", ""type"": 183, ""active"": true, ""params"": {""action"": [{""Hours "": "" getTime(\""hms\"")""}, {""\nMts "": "" getTime(\""m\"")""}, {""\nsec "": "" getTime(\""s\"")""}], ""message"": ""Checking time with a high priority."", ""rvsJSON"": [""PAY_ANN""], ""apiSource"": {}, ""actionType"": ""impute"", ""apiChecked"": false}, ""ruleId"": 183, ""actionType"": ""impute"", ""rulePriority"": ""7"", ""validationType"": ""Time Based Rules""}, ""index"": -1, ""conditions"": {""all"": [{""fact"": ""checkCondition"", ""path"": ""$.value"", ""value"": true, ""params"": {""conditionstring"": ""1 == 1""}, ""operator"": ""equal""}]}}",TRUE,NULL,NULL,NULL,NULL,18:42.4,18:42.5,NULL,NULL,Time Based Rules,"{""event"": {""name"": ""Time Based rules setup from Quick Add"", ""type"": 183, ""active"": true, ""params"": {""action"": [{""Hours "": "" getTime(\""hms\"")""}, {""\nMts "": "" getTime(\""m\"")""}, {""\nsec "": "" getTime(\""s\"")""}], ""message"": ""Checking time with a high priority."", ""rvsJSON"": [""PAY_ANN""], ""apiSource"": {}, ""actionType"": ""impute"", ""apiChecked"": false}, ""ruleId"": 183, ""actionType"": ""impute"", ""rulePriority"": ""7"", ""validationType"": ""Time Based Rules""}, ""index"": -1, ""conditions"": {""all"": [{""fact"": ""checkCondition"", ""path"": ""$.value"", ""value"": true, ""params"": {""conditionstring"": ""1 == 1""}, ""operator"": ""equal""}]}}"
173,Total Operating Revenue Missing and QSS  is n/a,"<h2>Rule Definition: Total Operating Revenue Missing and QSS is n/a</h2><p><br></p><p>If RCPT_TOT is not available and TYPOP_CODE_STAT is equal to '4X', RCPT_OWN_VAL is zero, RCPT_COMSN_GSV_VAL is not equal to RCPT_TOT_VAL, RCPT_COMSN_GSV_VAL is greater than RCPT_TOT_VAL, and RCPT_TOT_VAL is equal to RCPT_COMSN_EARN_VAL, then a message should be sent indicating that the rule is successful. In this case, Total operating revenue should be set equal to QSS revenue and the facts [""PAY_ANN""] should be tracked. The rule should also perform the action {""RCPT_TOT"":""RCPT_COMSN_GSV_VAL""}. This rule is of type estab and has a rule priority of 5 on a scale of 1-10. No API has been defined.</p>","{""event"": {""name"": ""Total Operating Revenue Missing and QSS  is n/a"", ""type"": 173, ""active"": true, ""params"": {""rvs"": ""[\""PAY_ANN\""]"", ""action"": [{""RCPT_TOT"": ""RCPT_COMSN_GSV_VAL""}], ""message"": ""Rule is successful: If Total operating revenue is missing and QSS # of imputed quarters is equal to zero, and qss revenue is greater than zero, then set total operating revenue equal to qss revenue"", ""rvsJSON"": [""PAY_ANN""], ""apiSource"": {}, ""actionType"": ""impute"", ""apiChecked"": false}, ""ruleId"": 173, ""actionType"": ""impute"", ""rulePriority"": ""5"", ""validationType"": ""estab""}, ""index"": -1, ""conditions"": {""all"": [{""fact"": ""checkCondition"", ""path"": ""$.value"", ""value"": true, ""params"": {""conditionstring"": ""RCPT_TOT > 0 and TYPOP_CODE_STAT == '4X' and RCPT_OWN_VAL == 0 and RCPT_COMSN_GSV_VAL != RCPT_TOT_VAL and RCPT_COMSN_GSV_VAL > RCPT_TOT_VAL and RCPT_TOT_VAL == RCPT_COMSN_EARN_VAL ""}, ""operator"": ""equal""}]}}",TRUE,NULL,NULL,NULL,NULL,45:52.9,45:53.0,NULL,NULL,estab,"{""event"": {""name"": ""Total Operating Revenue Missing and QSS  is n/a"", ""type"": 173, ""active"": true, ""params"": {""rvs"": ""[\""PAY_ANN\""]"", ""action"": [{""RCPT_TOT"": ""RCPT_COMSN_GSV_VAL""}], ""message"": ""Rule is successful: If Total operating revenue is missing and QSS # of imputed quarters is equal to zero, and qss revenue is greater than zero, then set total operating revenue equal to qss revenue"", ""rvsJSON"": [""PAY_ANN""], ""apiSource"": {}, ""actionType"": ""impute"", ""apiChecked"": false}, ""ruleId"": 173, ""actionType"": ""impute"", ""rulePriority"": ""5"", ""validationType"": ""estab""}, ""index"": -1, ""conditions"": {""all"": [{""fact"": ""checkCondition"", ""path"": ""$.value"", ""value"": true, ""params"": {""conditionstring"": ""RCPT_TOT > 0 and TYPOP_CODE_STAT == '4X' and RCPT_OWN_VAL == 0 and RCPT_COMSN_GSV_VAL != RCPT_TOT_VAL and RCPT_COMSN_GSV_VAL > RCPT_TOT_VAL and RCPT_TOT_VAL == RCPT_COMSN_EARN_VAL ""}, ""operator"": ""equal""}]}}"
230,Creating a new rule. Change its name....,"

If RCPT_TOT > 0 then send a message: ""Your payment has been received. Thank you!"" and track these facts: [""PAY_ANN""]. Also perform the following actions, if the rule is successful: RCPT_TOT = RCPT_TOT. This rule has a priority of 8 on a scale of 1-10 and no API has been defined. This rule was created at Sat Jan 21 2023 01:41:14 GMT-0500 (Eastern Standard Time).","{""event"": {""name"": ""Creating a new rule. Change its name...."", ""type"": 230, ""active"": true, ""params"": {""action"": [{""RCPT_TOT "": "" RCPT_TOT""}], ""message"": ""Enter the message you want to display... . Some initial conditions have been pre-defined."", ""rvsJSON"": [""PAY_ANN""], ""apiSource"": {}, ""actionType"": ""impute"", ""apiChecked"": false}, ""ruleId"": 230, ""actionType"": ""impute"", ""rulePriority"": ""8"", ""validationType"": ""KAU/ESTAB""}, ""index"": -1, ""conditions"": {""all"": [{""fact"": ""checkCondition"", ""path"": ""$.value"", ""value"": true, ""params"": {""conditionstring"": ""RCPT_TOT > 0""}, ""operator"": ""equal""}]}}",TRUE,NULL,NULL,NULL,NULL,41:27.8,41:27.8,NULL,NULL,KAU/ESTAB,"{""event"": {""name"": ""Creating a new rule. Change its name...."", ""type"": 230, ""active"": true, ""params"": {""action"": [{""RCPT_TOT "": "" RCPT_TOT""}], ""message"": ""Enter the message you want to display... . Some initial conditions have been pre-defined."", ""rvsJSON"": [""PAY_ANN""], ""apiSource"": {}, ""actionType"": ""impute"", ""apiChecked"": false}, ""ruleId"": 230, ""actionType"": ""impute"", ""rulePriority"": ""8"", ""validationType"": ""KAU/ESTAB""}, ""index"": -1, ""conditions"": {""all"": [{""fact"": ""checkCondition"", ""path"": ""$.value"", ""value"": true, ""params"": {""conditionstring"": ""RCPT_TOT > 0""}, ""operator"": ""equal""}]}}"
179,QSS is Y,"<h2>Rule Definition: QSS is Y</h2><p><br></p><p>If _qss00 in ('Y') and RCPT_TOT_VAL == RCPT_TOT and EQREVD00 == 0 and EQREV00 &gt; 0 then display the message: ""Enter the message you want to display..."" and track the facts: [""PAY_ANN""]. Also, perform the following actions: [{""RCPT_TOT_VAL"":""eqrev00""}]. This rule is of type KAU and has a rule priority of 5 on a scale of 1-10. No API has been defined.</p>","{""event"": {""name"": ""QSS is Y"", ""type"": ""179"", ""active"": true, ""params"": {""rvs"": ""[\""PAY_ANN\""]"", ""action"": [{""RCPT_TOT_VAL"": ""eqrev00""}], ""message"": ""Enter the message you want to display... . Some initial conditions have been pre-defined."", ""rvsJSON"": [""PAY_ANN""], ""apiSource"": {}, ""actionType"": ""impute"", ""apiChecked"": false}, ""ruleId"": 179, ""actionType"": ""impute"", ""rulePriority"": ""5"", ""validationType"": ""Business Aggregation""}, ""index"": -1, ""conditions"": {""all"": [{""fact"": ""checkCondition"", ""path"": ""$.value"", ""value"": true, ""params"": {""conditionstring"": ""_qss00 in ('Y') and RCPT_TOT_VAL == RCPT_TOT and EQREVD00 == 0 and EQREV00 > 0""}, ""operator"": ""equal""}]}}",TRUE,NULL,NULL,NULL,NULL,34:26.4,53:09.7,NULL,NULL,Business Aggregation,"{""event"": {""name"": ""QSS is Y"", ""type"": ""179"", ""active"": true, ""params"": {""rvs"": ""[\""PAY_ANN\""]"", ""action"": [{""RCPT_TOT_VAL"": ""eqrev00""}], ""message"": ""Enter the message you want to display... . Some initial conditions have been pre-defined."", ""rvsJSON"": [""PAY_ANN""], ""apiSource"": {}, ""actionType"": ""impute"", ""apiChecked"": false}, ""ruleId"": 179, ""actionType"": ""impute"", ""rulePriority"": ""5"", ""validationType"": ""Business Aggregation""}, ""index"": -1, ""conditions"": {""all"": [{""fact"": ""checkCondition"", ""path"": ""$.value"", ""value"": true, ""params"": {""conditionstring"": ""_qss00 in ('Y') and RCPT_TOT_VAL == RCPT_TOT and EQREVD00 == 0 and EQREV00 > 0""}, ""operator"": ""equal""}]}}"
195,RUle #54 Set edit Referral Flag for analyst review,"<h2>Rule Definition: RUle #54 Set edit Referral Flag for analyst review</h2><p><br></p><p>Rule RUle #54 states that if CAPEX_TOT is not equal to the sum of CAPEX_BUILD_USED, CAPEX_MACH_TOT, and CAPEX_OTH_TOT, then a message should be sent to set the edit Referral Flag for analyst review. The facts that should be tracked are ""PAY_ANN"" and the corresponding actions are to calculate the SUM_CAPEX as the sum of the three CAPEX values and to set the CAPEX_TOT to the CAPEX_TOT value. This rule is of type KAU/ESTAB and has a rule priority of 5 on a scale of 1-10. No API has been defined for this rule, and it was last modified at Thu Jan 19 2023 17:59:24 GMT-0500 (Eastern Standard Time).</p>","{""event"": {""name"": ""RUle #54 Set edit Referral Flag for analyst review"", ""type"": ""195"", ""active"": true, ""params"": {""rvs"": ""[\""PAY_ANN\""]"", ""action"": [{""SUM_CAPEX "": "" sum(CAPEX_BUILD_USED, CAPEX_MACH_TOT,CAPEX_OTH_TOT)""}, {""CAPEX_TOT"": ""CAPEX_TOT""}], ""message"": ""Set edit Referral Flag for analyst review. CAPEX_TOT is not equal to sum of CAPEX"", ""rvsJSON"": [""PAY_ANN""], ""apiSource"": {}, ""actionType"": ""impute"", ""apiChecked"": false}, ""ruleId"": 195, ""actionType"": ""impute"", ""rulePriority"": ""5"", ""validationType"": ""KAU/ESTAB""}, ""index"": -1, ""conditions"": {""all"": [{""fact"": ""checkCondition"", ""path"": ""$.value"", ""value"": true, ""params"": {""conditionstring"": ""CAPEX_TOT != sum(CAPEX_BUILD_USED, CAPEX_MACH_TOT,CAPEX_OTH_TOT) ""}, ""operator"": ""equal""}]}}",TRUE,NULL,NULL,NULL,NULL,01:12.1,31:22.3,NULL,NULL,KAU/ESTAB,"{""event"": {""name"": ""RUle #54 Set edit Referral Flag for analyst review"", ""type"": ""195"", ""active"": true, ""params"": {""rvs"": ""[\""PAY_ANN\""]"", ""action"": [{""SUM_CAPEX "": "" sum(CAPEX_BUILD_USED, CAPEX_MACH_TOT,CAPEX_OTH_TOT)""}, {""CAPEX_TOT"": ""CAPEX_TOT""}], ""message"": ""Set edit Referral Flag for analyst review. CAPEX_TOT is not equal to sum of CAPEX"", ""rvsJSON"": [""PAY_ANN""], ""apiSource"": {}, ""actionType"": ""impute"", ""apiChecked"": false}, ""ruleId"": 195, ""actionType"": ""impute"", ""rulePriority"": ""5"", ""validationType"": ""KAU/ESTAB""}, ""index"": -1, ""conditions"": {""all"": [{""fact"": ""checkCondition"", ""path"": ""$.value"", ""value"": true, ""params"": {""conditionstring"": ""CAPEX_TOT != sum(CAPEX_BUILD_USED, CAPEX_MACH_TOT,CAPEX_OTH_TOT) ""}, ""operator"": ""equal""}]}}"
169,Creating averages and aggregate values for sub entities,"<h2>Rule Definition: Creating averages and aggregate values for sub entities</h2><p><br></p><p> If the aggregate value of PAY_ANN for all sub entities with a parent_id equal to the reporting_id is greater than 0, then send a message to indicate that the sum of all sub entities' PAY_ANN is greater than zero, and track the facts [""PAY_ANN""]. Also perform the following actions: [{""PAY_ANN_CHILDREN"":""agg(\""PAY_ANN\"", concat(\""parent_id = \"", reporting_id) ) ""},{""PAY_ANN_CHILDREN_AVG"":""agg(\""PAY_ANN\"", concat(\""parent_id = \"", reporting_id), \""avg\"" ) ""},{""PAY_ANN"":""PAY_ANN""}]. This rule is of type Business Aggregation and has a rule priority of 10 on a scale of 1-10. No api has been defined.</p>","{""event"": {""name"": ""Creating averages and aggregate values for sub entities"", ""type"": ""169"", ""active"": true, ""params"": {""rvs"": ""[\""PAY_ANN\""]"", ""action"": [{""PAY_ANN_CHILDREN"": ""agg(\""PAY_ANN\"", concat(\""parent_id = \"", reporting_id) ) ""}, {""PAY_ANN_CHILDREN_AVG"": ""agg(\""PAY_ANN\"", concat(\""parent_id = \"", reporting_id), \""avg\"" ) ""}, {""PAY_ANN"": ""PAY_ANN""}], ""message"": ""Sum of all the sub entities PAY_ANN is greater than zero."", ""rvsJSON"": [""PAY_ANN""], ""apiSource"": {}, ""actionType"": ""impute"", ""apiChecked"": false}, ""ruleId"": 169, ""actionType"": ""impute"", ""rulePriority"": ""10"", ""validationType"": ""Business Aggregation""}, ""index"": -1, ""conditions"": {""all"": [{""fact"": ""checkCondition"", ""path"": ""$.value"", ""value"": true, ""params"": {""conditionstring"": ""agg(\""PAY_ANN\"", concat(\""parent_id = \"", reporting_id) ) > 0""}, ""operator"": ""equal""}]}}",TRUE,NULL,NULL,NULL,NULL,19:10.2,02:10.3,NULL,NULL,Business Aggregation,"{""event"": {""name"": ""Creating averages and aggregate values for sub entities"", ""type"": ""169"", ""active"": true, ""params"": {""rvs"": ""[\""PAY_ANN\""]"", ""action"": [{""PAY_ANN_CHILDREN"": ""agg(\""PAY_ANN\"", concat(\""parent_id = \"", reporting_id) ) ""}, {""PAY_ANN_CHILDREN_AVG"": ""agg(\""PAY_ANN\"", concat(\""parent_id = \"", reporting_id), \""avg\"" ) ""}, {""PAY_ANN"": ""PAY_ANN""}], ""message"": ""Sum of all the sub entities PAY_ANN is greater than zero."", ""rvsJSON"": [""PAY_ANN""], ""apiSource"": {}, ""actionType"": ""impute"", ""apiChecked"": false}, ""ruleId"": 169, ""actionType"": ""impute"", ""rulePriority"": ""10"", ""validationType"": ""Business Aggregation""}, ""index"": -1, ""conditions"": {""all"": [{""fact"": ""checkCondition"", ""path"": ""$.value"", ""value"": true, ""params"": {""conditionstring"": ""agg(\""PAY_ANN\"", concat(\""parent_id = \"", reporting_id) ) > 0""}, ""operator"": ""equal""}]}}"
175,Time Based Rules: Getting Started,"<h2>Rule Definition: Time Based Rules: Getting Started</h2><p><br></p><p>If the current month is January, then this Time Based Rule will send a message and track the facts [""PAY_ANN""]. Furthermore, it will perform the following actions: getting the current time in hours, minutes, and seconds (hms), hours and minutes (hm), minutes (m), seconds (s), date, month, and year. This rule has a priority of 5 out of 10 and no API has been defined.</p>","{""event"": {""name"": ""Time Based Rules: Getting Started"", ""type"": ""175"", ""active"": true, ""params"": {""rvs"": ""[\""PAY_ANN\""]"", ""action"": [{""H_M_S"": ""getTime(\""hms\"")""}, {""H_M"": ""getTime(\""hm\"")""}, {""M"": ""getTime(\""m\"")""}, {""S"": ""getTime(\""s\"")""}, {""Date"": ""getTime(\""date\"")""}, {""Month"": ""getTime(\""month\"")""}, {""Year"": ""getTime(\""year\"")""}, {""Today"": ""getTime()""}], ""message"": ""Its the month of January"", ""rvsJSON"": [""PAY_ANN""], ""apiSource"": {}, ""actionType"": ""impute"", ""apiChecked"": false}, ""ruleId"": 175, ""actionType"": ""impute"", ""rulePriority"": ""5"", ""validationType"": ""Time Based Rules""}, ""index"": -1, ""conditions"": {""all"": [{""fact"": ""checkCondition"", ""path"": ""$.value"", ""value"": true, ""params"": {""conditionstring"": ""getTime(\""month\"") == 1""}, ""operator"": ""equal""}]}}",TRUE,NULL,NULL,NULL,NULL,29:04.4,51:17.8,NULL,NULL,Time Based Rules,"{""event"": {""name"": ""Time Based Rules: Getting Started"", ""type"": ""175"", ""active"": true, ""params"": {""rvs"": ""[\""PAY_ANN\""]"", ""action"": [{""H_M_S"": ""getTime(\""hms\"")""}, {""H_M"": ""getTime(\""hm\"")""}, {""M"": ""getTime(\""m\"")""}, {""S"": ""getTime(\""s\"")""}, {""Date"": ""getTime(\""date\"")""}, {""Month"": ""getTime(\""month\"")""}, {""Year"": ""getTime(\""year\"")""}, {""Today"": ""getTime()""}], ""message"": ""Its the month of January"", ""rvsJSON"": [""PAY_ANN""], ""apiSource"": {}, ""actionType"": ""impute"", ""apiChecked"": false}, ""ruleId"": 175, ""actionType"": ""impute"", ""rulePriority"": ""5"", ""validationType"": ""Time Based Rules""}, ""index"": -1, ""conditions"": {""all"": [{""fact"": ""checkCondition"", ""path"": ""$.value"", ""value"": true, ""params"": {""conditionstring"": ""getTime(\""month\"") == 1""}, ""operator"": ""equal""}]}}"
170,Chained rule on Computed vals,"<h2>Rule Definition: Chained rule on Computed vals</h2><p><br></p><p> This rule states that if the value of RCPT_TOT is greater than 0, then a message will be sent with the text entered. Additionally, the rule will track the facts of PAY_ANN and perform the action of PAY_ANN_PLUS_100, which is defined as the value of PAY_ANN plus 100. This rule is of type Business Aggregation and has a rule priority of 10 on a scale of 1-10. No API has been defined.</p>","{""event"": {""name"": ""Chained rule on Computed vals"", ""type"": ""170"", ""active"": true, ""params"": {""rvs"": ""[\""PAY_ANN\""]"", ""action"": [{""PAY_ANN_PLUS_100"": ""PAY_ANN +100""}], ""message"": ""Enter the message you want to display... . Some initial conditions have been pre-defined."", ""rvsJSON"": [""PAY_ANN""], ""apiSource"": {}, ""actionType"": ""impute"", ""apiChecked"": false}, ""ruleId"": 170, ""actionType"": ""impute"", ""rulePriority"": ""10"", ""validationType"": ""Business Aggregation""}, ""index"": -1, ""conditions"": {""all"": [{""fact"": ""checkCondition"", ""path"": ""$.value"", ""value"": true, ""params"": {""conditionstring"": ""RCPT_TOT > 0""}, ""operator"": ""equal""}]}}",TRUE,NULL,NULL,NULL,NULL,00:25.6,37:39.1,NULL,NULL,Business Aggregation,"{""event"": {""name"": ""Chained rule on Computed vals"", ""type"": ""170"", ""active"": true, ""params"": {""rvs"": ""[\""PAY_ANN\""]"", ""action"": [{""PAY_ANN_PLUS_100"": ""PAY_ANN +100""}], ""message"": ""Enter the message you want to display... . Some initial conditions have been pre-defined."", ""rvsJSON"": [""PAY_ANN""], ""apiSource"": {}, ""actionType"": ""impute"", ""apiChecked"": false}, ""ruleId"": 170, ""actionType"": ""impute"", ""rulePriority"": ""10"", ""validationType"": ""Business Aggregation""}, ""index"": -1, ""conditions"": {""all"": [{""fact"": ""checkCondition"", ""path"": ""$.value"", ""value"": true, ""params"": {""conditionstring"": ""RCPT_TOT > 0""}, ""operator"": ""equal""}]}}"
240,if they reported commissions and an average commission rate but no GSV,"<h2>Rule Definition: if they reported commissions and an average commission rate but no GSV</h2><p><br></p><p> If TYPOP_CODE_STAT == '4X' and RCPT_COMSN_GSV_VAL in (0,1) and RCPT_COMSN_EARN_VAL not in (0,1) and RCPT_COMSN_AVG_RATE not in (0,1), then send a message: use the commission and commission rate to calculate GSV and track these facts: [""TYPOP_CODE_STAT"",""RCPT_COMSN_GSV_VAL""]. Also perform the following actions:[{""RCPT_COMSN_GSV_VAL "":"" RCPT_COMSN_EARN_VAL / RCPT_COMSN_AVG_RATE""}]. This rule is of type: estab. It has a rule priority of 5 on a scale of 1-10. No API has been defined. This rule was modified at Mon Jan 23 2023 10:19:36 GMT-0500 (Eastern Standard Time).</p>","{""event"": {""name"": ""if they reported commissions and an average commission rate but no GSV"", ""type"": ""240"", ""active"": true, ""params"": {""rvs"": ""[\""TYPOP_CODE_STAT\"",\""RCPT_COMSN_GSV_VAL\""]"", ""action"": [{""RCPT_COMSN_GSV_VAL "": "" RCPT_COMSN_EARN_VAL / RCPT_COMSN_AVG_RATE""}], ""message"": ""if they reported commissions and an average commission rate but no GSV, use the commission and commission rate to calculate GSV"", ""rvsJSON"": [""TYPOP_CODE_STAT"", ""RCPT_COMSN_GSV_VAL""], ""apiSource"": {}, ""actionType"": ""impute"", ""apiChecked"": false}, ""ruleId"": 240, ""actionType"": ""impute"", ""rulePriority"": ""5"", ""validationType"": ""estab""}, ""index"": -1, ""conditions"": {""all"": [{""fact"": ""checkCondition"", ""path"": ""$.value"", ""value"": true, ""params"": {""conditionstring"": ""TYPOP_CODE_STAT == '4X' and RCPT_COMSN_GSV_VAL in (0,1) and RCPT_COMSN_EARN_VAL not in (0,1) and RCPT_COMSN_AVG_RATE not in (0,1)""}, ""operator"": ""equal""}]}}",TRUE,NULL,NULL,NULL,NULL,19:16.5,19:49.1,NULL,NULL,estab,"{""event"": {""name"": ""if they reported commissions and an average commission rate but no GSV"", ""type"": ""240"", ""active"": true, ""params"": {""rvs"": ""[\""TYPOP_CODE_STAT\"",\""RCPT_COMSN_GSV_VAL\""]"", ""action"": [{""RCPT_COMSN_GSV_VAL "": "" RCPT_COMSN_EARN_VAL / RCPT_COMSN_AVG_RATE""}], ""message"": ""if they reported commissions and an average commission rate but no GSV, use the commission and commission rate to calculate GSV"", ""rvsJSON"": [""TYPOP_CODE_STAT"", ""RCPT_COMSN_GSV_VAL""], ""apiSource"": {}, ""actionType"": ""impute"", ""apiChecked"": false}, ""ruleId"": 240, ""actionType"": ""impute"", ""rulePriority"": ""5"", ""validationType"": ""estab""}, ""index"": -1, ""conditions"": {""all"": [{""fact"": ""checkCondition"", ""path"": ""$.value"", ""value"": true, ""params"": {""conditionstring"": ""TYPOP_CODE_STAT == '4X' and RCPT_COMSN_GSV_VAL in (0,1) and RCPT_COMSN_EARN_VAL not in (0,1) and RCPT_COMSN_AVG_RATE not in (0,1)""}, ""operator"": ""equal""}]}}"
241,"if no sales on own account (i.e., all commission-based) and GSV does not equal ","

If TYPOP_CODE_STAT == '4X', RCPT_OWN_VAL == 0, RCPT_COMSN_GSV_VAL != RCPT_TOT_VAL, RCPT_COMSN_GSV_VAL < RCPT_TOT_VAL and RCPT_TOT_VAL == sum(RCPT_COMSN_GSV_VAL, RCPT_COMSN_EARN_VAL), then send a message: ""If no sales on own account (i.e., all commission-based) and GSV does not equal total sales (which, by definition can't happen, because GSV + OWN = total sales and if OWN = 0, then GSV = SALES) and SALES = the sum of GSV + COMMISSION, set sales to GSV because commissions should not be included in total sales."" Track the facts [""RCPT_COMSN_GSV_VAL"","" RCPT_TOT_VAL""]. Set RCPT_TOT_VAL = RCPT_COMSN_GSV_VAL. This rule has a priority of 5 on a scale of 1-10 and was created at Mon","{""event"": {""name"": ""if no sales on own account (i.e., all commission-based) and GSV does not equal "", ""type"": 241, ""active"": true, ""params"": {""action"": [{""RCPT_TOT_VAL "": "" RCPT_COMSN_GSV_VAL""}], ""message"": ""if no sales on own account (i.e., all commission-based) and GSV does not equal total sales (which, by definition can't happen, because GSV + OWN = total sales and if OWN = 0, then GSV = SALES) and SALES = the sum of GSV + COMMISSION, set sales to GSV because commissions should not be included in total sales"", ""rvsJSON"": [""RCPT_COMSN_GSV_VAL"", "" RCPT_TOT_VAL""], ""apiSource"": {}, ""actionType"": ""impute"", ""apiChecked"": false}, ""ruleId"": 241, ""actionType"": ""impute"", ""rulePriority"": ""5"", ""validationType"": ""estab""}, ""index"": -1, ""conditions"": {""all"": [{""fact"": ""checkCondition"", ""path"": ""$.value"", ""value"": true, ""params"": {""conditionstring"": ""TYPOP_CODE_STAT == '4X' and RCPT_OWN_VAL == 0 and RCPT_COMSN_GSV_VAL != RCPT_TOT_VAL and RCPT_COMSN_GSV_VAL < RCPT_TOT_VAL and RCPT_TOT_VAL == sum(RCPT_COMSN_GSV_VAL, RCPT_COMSN_EARN_VAL)""}, ""operator"": ""equal""}]}}",TRUE,NULL,NULL,NULL,NULL,56:39.7,56:39.7,NULL,NULL,estab,"{""event"": {""name"": ""if no sales on own account (i.e., all commission-based) and GSV does not equal "", ""type"": 241, ""active"": true, ""params"": {""action"": [{""RCPT_TOT_VAL "": "" RCPT_COMSN_GSV_VAL""}], ""message"": ""if no sales on own account (i.e., all commission-based) and GSV does not equal total sales (which, by definition can't happen, because GSV + OWN = total sales and if OWN = 0, then GSV = SALES) and SALES = the sum of GSV + COMMISSION, set sales to GSV because commissions should not be included in total sales"", ""rvsJSON"": [""RCPT_COMSN_GSV_VAL"", "" RCPT_TOT_VAL""], ""apiSource"": {}, ""actionType"": ""impute"", ""apiChecked"": false}, ""ruleId"": 241, ""actionType"": ""impute"", ""rulePriority"": ""5"", ""validationType"": ""estab""}, ""index"": -1, ""conditions"": {""all"": [{""fact"": ""checkCondition"", ""path"": ""$.value"", ""value"": true, ""params"": {""conditionstring"": ""TYPOP_CODE_STAT == '4X' and RCPT_OWN_VAL == 0 and RCPT_COMSN_GSV_VAL != RCPT_TOT_VAL and RCPT_COMSN_GSV_VAL < RCPT_TOT_VAL and RCPT_TOT_VAL == sum(RCPT_COMSN_GSV_VAL, RCPT_COMSN_EARN_VAL)""}, ""operator"": ""equal""}]}}"
243,"if total inventory doesn't equal the sum of LIFO and non-LIFO, analyst review","

If INV_CY_TOT does not equal the sum of INV_CY_LIFO_VAL and INV_CY_NONLIFO_TOT, set the REVIEW_FLAG to 1 and track the facts [""INV_CY_TOT "",""INV_CY_LIFO_VAL"","" INV_CY_NONLIFO_TOT""]. This rule has a priority of 5 on a scale of 1-10 and was created on Mon Jan 23 2023 12:02:21 GMT-0500 (Eastern Standard Time). No API has been defined.","{""event"": {""name"": ""if total inventory doesn't equal the sum of LIFO and non-LIFO, analyst review"", ""type"": 243, ""active"": true, ""params"": {""action"": [{""REVIEW_FLAG "": "" 1""}], ""message"": ""if total inventory doesn't equal the sum of LIFO and non-LIFO, analyst review, then set Review FLAG"", ""rvsJSON"": [""INV_CY_TOT "", ""INV_CY_LIFO_VAL"", "" INV_CY_NONLIFO_TOT""], ""apiSource"": {}, ""actionType"": ""impute"", ""apiChecked"": false}, ""ruleId"": 243, ""actionType"": ""impute"", ""rulePriority"": ""5"", ""validationType"": ""KAU""}, ""index"": -1, ""conditions"": {""all"": [{""fact"": ""checkCondition"", ""path"": ""$.value"", ""value"": true, ""params"": {""conditionstring"": ""INV_CY_TOT != sum (INV_CY_LIFO_VAL, INV_CY_NONLIFO_TOT)""}, ""operator"": ""equal""}]}}",TRUE,NULL,NULL,NULL,NULL,03:04.6,03:04.7,NULL,NULL,KAU,"{""event"": {""name"": ""if total inventory doesn't equal the sum of LIFO and non-LIFO, analyst review"", ""type"": 243, ""active"": true, ""params"": {""action"": [{""REVIEW_FLAG "": "" 1""}], ""message"": ""if total inventory doesn't equal the sum of LIFO and non-LIFO, analyst review, then set Review FLAG"", ""rvsJSON"": [""INV_CY_TOT "", ""INV_CY_LIFO_VAL"", "" INV_CY_NONLIFO_TOT""], ""apiSource"": {}, ""actionType"": ""impute"", ""apiChecked"": false}, ""ruleId"": 243, ""actionType"": ""impute"", ""rulePriority"": ""5"", ""validationType"": ""KAU""}, ""index"": -1, ""conditions"": {""all"": [{""fact"": ""checkCondition"", ""path"": ""$.value"", ""value"": true, ""params"": {""conditionstring"": ""INV_CY_TOT != sum (INV_CY_LIFO_VAL, INV_CY_NONLIFO_TOT)""}, ""operator"": ""equal""}]}}"
239,Reported a gross selling value from goods sold on commission,"<h2>Rule Definition: Reported a gross selling value from goods sold on commission</h2><p><br></p><p> If the TYPOP_CODE_STAT is equal to '4X', the RCPT_COMSN_GSV_VAL is not equal to 0 or 1, the RCPT_COMSN_EARN_VAL is equal to 0 or 1, and the RCPT_COMSN_AVG_RATE is not equal to 0 or 1, then a message will be sent to track the facts [""PAY_ANN""] and the action RCPT_COMSN_EARN_VAL will be set to RCPT_COMSN_GSV_VAL multiplied by RCPT_COMSN_AVG_RATE. This rule is of type estab and has a rule priority of 5 on a scale of 1-10. No API has been defined and this rule was modified on Mon Jan 23 2023 12:08:57 GMT-0500 (Eastern Standard Time).</p>","{""event"": {""name"": ""Reported a gross selling value from goods sold on commission"", ""type"": ""239"", ""active"": true, ""params"": {""rvs"": ""[\""PAY_ANN\""]"", ""action"": [{""RCPT_COMSN_EARN_VAL "": "" RCPT_COMSN_GSV_VAL * RCPT_COMSN_AVG_RATE""}], ""message"": ""if they reported a gross selling value from goods gold on commission, and an average commission rate, but didn't provide the amount of commissions (or set to 0), use GSV * average commission rate to derive commission"", ""rvsJSON"": [""PAY_ANN""], ""apiSource"": {}, ""actionType"": ""impute"", ""apiChecked"": false}, ""ruleId"": 239, ""actionType"": ""impute"", ""rulePriority"": ""5"", ""validationType"": ""estab""}, ""index"": -1, ""conditions"": {""all"": [{""fact"": ""checkCondition"", ""path"": ""$.value"", ""value"": true, ""params"": {""conditionstring"": ""TYPOP_CODE_STAT == '4X' and RCPT_COMSN_GSV_VAL not in (0,1) and RCPT_COMSN_EARN_VAL in (0,1) and RCPT_COMSN_AVG_RATE not in (0,1)""}, ""operator"": ""equal""}]}}",TRUE,NULL,NULL,NULL,NULL,55:59.1,09:06.0,NULL,NULL,estab,"{""event"": {""name"": ""Reported a gross selling value from goods sold on commission"", ""type"": ""239"", ""active"": true, ""params"": {""rvs"": ""[\""PAY_ANN\""]"", ""action"": [{""RCPT_COMSN_EARN_VAL "": "" RCPT_COMSN_GSV_VAL * RCPT_COMSN_AVG_RATE""}], ""message"": ""if they reported a gross selling value from goods gold on commission, and an average commission rate, but didn't provide the amount of commissions (or set to 0), use GSV * average commission rate to derive commission"", ""rvsJSON"": [""PAY_ANN""], ""apiSource"": {}, ""actionType"": ""impute"", ""apiChecked"": false}, ""ruleId"": 239, ""actionType"": ""impute"", ""rulePriority"": ""5"", ""validationType"": ""estab""}, ""index"": -1, ""conditions"": {""all"": [{""fact"": ""checkCondition"", ""path"": ""$.value"", ""value"": true, ""params"": {""conditionstring"": ""TYPOP_CODE_STAT == '4X' and RCPT_COMSN_GSV_VAL not in (0,1) and RCPT_COMSN_EARN_VAL in (0,1) and RCPT_COMSN_AVG_RATE not in (0,1)""}, ""operator"": ""equal""}]}}"
245,"if there's a reliable value for ecommerce, then the e-commerce status is 1","

If the value of RCPT_ECOMM_VAL is greater than 0, then set the value of the e-commerce status variable, RCPT_ECOMM_STAT, to 1, and track the fact [""RCPT_ECOMM_VAL""]. This rule has a priority of 5 on a scale of 1-10 and was created on Mon Jan 23 2023 12:14:46 GMT-0500 (Eastern Standard Time). No API has been defined.","{""event"": {""name"": ""if there's a reliable value for ecommerce, then the e-commerce status is 1"", ""type"": 245, ""active"": true, ""params"": {""action"": [{""RCPT_ECOMM_STAT "": "" 1""}], ""message"": ""if there's a reliable value for ecommerce, then the e-commerce status variable should be 1"", ""rvsJSON"": [""RCPT_ECOMM_VAL""], ""apiSource"": {}, ""actionType"": ""impute"", ""apiChecked"": false}, ""ruleId"": 245, ""actionType"": ""impute"", ""rulePriority"": ""5"", ""validationType"": ""KAU""}, ""index"": -1, ""conditions"": {""all"": [{""fact"": ""checkCondition"", ""path"": ""$.value"", ""value"": true, ""params"": {""conditionstring"": ""RCPT_ECOMM_VAL > 0""}, ""operator"": ""equal""}]}}",TRUE,NULL,NULL,NULL,NULL,15:04.1,15:04.1,NULL,NULL,KAU,"{""event"": {""name"": ""if there's a reliable value for ecommerce, then the e-commerce status is 1"", ""type"": 245, ""active"": true, ""params"": {""action"": [{""RCPT_ECOMM_STAT "": "" 1""}], ""message"": ""if there's a reliable value for ecommerce, then the e-commerce status variable should be 1"", ""rvsJSON"": [""RCPT_ECOMM_VAL""], ""apiSource"": {}, ""actionType"": ""impute"", ""apiChecked"": false}, ""ruleId"": 245, ""actionType"": ""impute"", ""rulePriority"": ""5"", ""validationType"": ""KAU""}, ""index"": -1, ""conditions"": {""all"": [{""fact"": ""checkCondition"", ""path"": ""$.value"", ""value"": true, ""params"": {""conditionstring"": ""RCPT_ECOMM_VAL > 0""}, ""operator"": ""equal""}]}}"
246,If Total operating revenue is missing and QSS # of imputed quarters is equal to ,"<p>If Total operating revenue is missing, QSS # of imputed quarters is equal to zero, qss00 is equal to 'Y', RCPT_TOT_VAL is greater than zero, and EQREVD00 and EQREV00 are both greater than zero, then set total operating revenue equal to qss revenue (RCPT_TOT_VAL = EQREV00) and track these facts [""RCPT_TOT_VAL""]. This rule has a priority of 5 on a scale of 1-10 and no API has been defined. It was created at Mon Jan 23 2023 12:21:59 GMT-0500 (Eastern Standard Time).</p>","{""event"": {""name"": ""If Total operating revenue is missing and QSS # of imputed quarters is equal to "", ""type"": ""246"", ""active"": true, ""params"": {""rvs"": ""[\""RCPT_TOT_VAL\""]"", ""action"": [{""RCPT_TOT_VAL "": "" eqrev00""}], ""message"": ""If Total operating revenue is missing and QSS # of imputed quarters is equal to zero, and qss revenue is greater than zero, then set total operating revenue equal to qss revenue"", ""rvsJSON"": [""RCPT_TOT_VAL""], ""apiSource"": {}, ""actionType"": ""impute"", ""apiChecked"": false}, ""ruleId"": 246, ""actionType"": ""impute"", ""rulePriority"": ""5"", ""validationType"": ""KAU""}, ""index"": -1, ""conditions"": {""all"": [{""fact"": ""checkCondition"", ""path"": ""$.value"", ""value"": true, ""params"": {""conditionstring"": ""_qss00 in ('Y')  and RCPT_TOT_VAL > 0 and EQREVD00 == 0 and EQREV00 > 0\n""}, ""operator"": ""equal""}]}}",TRUE,NULL,NULL,NULL,NULL,22:13.1,22:31.4,NULL,NULL,KAU,"{""event"": {""name"": ""If Total operating revenue is missing and QSS # of imputed quarters is equal to "", ""type"": ""246"", ""active"": true, ""params"": {""rvs"": ""[\""RCPT_TOT_VAL\""]"", ""action"": [{""RCPT_TOT_VAL "": "" eqrev00""}], ""message"": ""If Total operating revenue is missing and QSS # of imputed quarters is equal to zero, and qss revenue is greater than zero, then set total operating revenue equal to qss revenue"", ""rvsJSON"": [""RCPT_TOT_VAL""], ""apiSource"": {}, ""actionType"": ""impute"", ""apiChecked"": false}, ""ruleId"": 246, ""actionType"": ""impute"", ""rulePriority"": ""5"", ""validationType"": ""KAU""}, ""index"": -1, ""conditions"": {""all"": [{""fact"": ""checkCondition"", ""path"": ""$.value"", ""value"": true, ""params"": {""conditionstring"": ""_qss00 in ('Y')  and RCPT_TOT_VAL > 0 and EQREVD00 == 0 and EQREV00 > 0\n""}, ""operator"": ""equal""}]}}"
247,IF the flag for hazardas materials is reported   and the NAICS is in 484 and the,"<p>If (RCPT_MOTR_HAZRD_STAT &gt; 0 &amp;&amp; substr(RECORD_NAICS_NUM, 1,3) == '484' &amp;&amp; RCPT_MOTR_HAZRD_STAT == 2 &amp;&amp; RCPT_MOTR_HAZRD_PCT == '') { RCPT_MOTR_HAZRD_PCT = 0; Track: [""RCPT_MOTR_HAZRD_STAT"", ""RCPT_MOTR_HAZRD_PCT""]; Priority: 5/10; No API Defined; Created: Mon Jan 23 2023 12:33:15 GMT-0500 (Eastern Standard Time); }</p>","{""event"": {""name"": ""IF the flag for hazardas materials is reported   and the NAICS is in 484 and the"", ""type"": ""247"", ""active"": true, ""params"": {""rvs"": ""[\""RCPT_MOTR_HAZRD_STAT\"",\"" RCPT_MOTR_HAZRD_PCT\""]"", ""action"": [{""RCPT_MOTR_HAZRD_PCT "": "" 0\n""}], ""message"": ""IF the flag for hazardas materials is reported   and the NAICS is in 484 and the checkbox is a no and % - Hazardous Materials is equal to missing then set the % - Hazardous Materials to 0."", ""rvsJSON"": [""RCPT_MOTR_HAZRD_STAT"", "" RCPT_MOTR_HAZRD_PCT""], ""apiSource"": {}, ""actionType"": ""impute"", ""apiChecked"": false}, ""ruleId"": 247, ""actionType"": ""impute"", ""rulePriority"": ""5"", ""validationType"": ""KAU""}, ""index"": -1, ""conditions"": {""all"": [{""fact"": ""checkCondition"", ""path"": ""$.value"", ""value"": true, ""params"": {""conditionstring"": ""RCPT_MOTR_HAZRD_STAT >0 and substr(RECORD_NAICS_NUM, 1,3)== '484 'and RCPT_MOTR_HAZRD_STAT ==2 and RCPT_MOTR_HAZRD_PCT  == ''""}, ""operator"": ""equal""}]}}",TRUE,NULL,NULL,NULL,NULL,33:31.6,34:40.2,NULL,NULL,KAU,"{""event"": {""name"": ""IF the flag for hazardas materials is reported   and the NAICS is in 484 and the"", ""type"": ""247"", ""active"": true, ""params"": {""rvs"": ""[\""RCPT_MOTR_HAZRD_STAT\"",\"" RCPT_MOTR_HAZRD_PCT\""]"", ""action"": [{""RCPT_MOTR_HAZRD_PCT "": "" 0\n""}], ""message"": ""IF the flag for hazardas materials is reported   and the NAICS is in 484 and the checkbox is a no and % - Hazardous Materials is equal to missing then set the % - Hazardous Materials to 0."", ""rvsJSON"": [""RCPT_MOTR_HAZRD_STAT"", "" RCPT_MOTR_HAZRD_PCT""], ""apiSource"": {}, ""actionType"": ""impute"", ""apiChecked"": false}, ""ruleId"": 247, ""actionType"": ""impute"", ""rulePriority"": ""5"", ""validationType"": ""KAU""}, ""index"": -1, ""conditions"": {""all"": [{""fact"": ""checkCondition"", ""path"": ""$.value"", ""value"": true, ""params"": {""conditionstring"": ""RCPT_MOTR_HAZRD_STAT >0 and substr(RECORD_NAICS_NUM, 1,3)== '484 'and RCPT_MOTR_HAZRD_STAT ==2 and RCPT_MOTR_HAZRD_PCT  == ''""}, ""operator"": ""equal""}]}}"
191,Screen for AA,"<p>If PAY_ANN &gt; 100, then create derived variables and track the facts [""PAY_ANN""]. Set RCPT_TOT equal to RCPT_TOT and create a variable AmitsSalary which is a concatenation of the string ""Amit makes this much money every year"" and PAY_ANN. Create a variable PAY_ANN_MD which is an aggregation of PAY_ANN with the condition that the state is equal to 'MD'. Assign a priority of 6 out of 10 to this rule and no API has been defined. This rule was created on Wed Jan 18 2023 19:11:30 GMT-0500 (Eastern Standard Time).</p>","{""event"": {""name"": ""Screen for AA"", ""type"": ""191"", ""active"": true, ""params"": {""rvs"": ""[\""PAY_ANN\""]"", ""action"": [{""RCPT_TOT "": "" RCPT_TOT""}, {""\nAmitsSalary "": "" concat(\""PAY_ANN annual pay is: \"" , PAY_ANN)""}, {""\nPAY_ANN_MD "": "" agg(\""PAY_ANN\"", \""state='MD' \"")""}], ""message"": ""Making Derived variables"", ""rvsJSON"": [""PAY_ANN""], ""apiSource"": {}, ""actionType"": ""impute"", ""apiChecked"": false}, ""ruleId"": 191, ""actionType"": ""impute"", ""rulePriority"": ""6"", ""validationType"": ""Getting Started""}, ""index"": -1, ""conditions"": {""all"": [{""fact"": ""checkCondition"", ""path"": ""$.value"", ""value"": true, ""params"": {""conditionstring"": ""PAY_ANN > 100 ""}, ""operator"": ""equal""}]}}",TRUE,NULL,NULL,NULL,NULL,11:41.1,38:50.4,NULL,NULL,Getting Started,"{""event"": {""name"": ""Screen for AA"", ""type"": ""191"", ""active"": true, ""params"": {""rvs"": ""[\""PAY_ANN\""]"", ""action"": [{""RCPT_TOT "": "" RCPT_TOT""}, {""\nAmitsSalary "": "" concat(\""PAY_ANN annual pay is: \"" , PAY_ANN)""}, {""\nPAY_ANN_MD "": "" agg(\""PAY_ANN\"", \""state='MD' \"")""}], ""message"": ""Making Derived variables"", ""rvsJSON"": [""PAY_ANN""], ""apiSource"": {}, ""actionType"": ""impute"", ""apiChecked"": false}, ""ruleId"": 191, ""actionType"": ""impute"", ""rulePriority"": ""6"", ""validationType"": ""Getting Started""}, ""index"": -1, ""conditions"": {""all"": [{""fact"": ""checkCondition"", ""path"": ""$.value"", ""value"": true, ""params"": {""conditionstring"": ""PAY_ANN > 100 ""}, ""operator"": ""equal""}]}}"
249,IF the flag for hazardas materials is reported and the NAICS is in 484 and the,"

If the flag for hazardous materials is reported, the NAICS is in 484, the checkbox is missing, and the percentage of hazardous materials is greater than zero, then set the hazardous materials checkbox to ""yes"", track the facts [""RECORD_NAICS_NUM, RCPT_MOTR_HAZRD_STAT, RCPT_MOTR_HAZRD_PCT""], and set RCPT_MOTR_HAZRD_STAT to 1, with a priority of 5 on a scale of 1-10. No API has been defined for this rule, which was created at Tue Jan 24 2023 11:12:40 GMT-0500 (Eastern Standard Time).","{""event"": {""name"": ""IF the flag for hazardas materials is reported and the NAICS is in 484 and the"", ""type"": 249, ""active"": true, ""params"": {""action"": [{""RCPT_MOTR_HAZRD_STAT"": ""1""}], ""message"": ""IF the flag for hazardas materials is reported   and the NAICS is in 484 and the checkbox is a missing and % - Hazardous Materials is greater than zero then set the hazardous materials checkbox to yes."", ""rvsJSON"": [""RECORD_NAICS_NUM, RCPT_MOTR_HAZRD_STAT,  RCPT_MOTR_HAZRD_PCT ""], ""apiSource"": {}, ""actionType"": ""impute"", ""apiChecked"": false}, ""ruleId"": 249, ""actionType"": ""impute"", ""rulePriority"": ""5"", ""validationType"": ""KAU""}, ""index"": -1, ""conditions"": {""all"": [{""fact"": ""checkCondition"", ""path"": ""$.value"", ""value"": true, ""params"": {""conditionstring"": ""RCPT_MOTR_HAZRD_PCT  and  substr(RECORD_NAICS_NUM, 1,3) == \""484\"" and RCPT_MOTR_HAZRD_STAT and RCPT_MOTR_HAZRD_PCT > 0""}, ""operator"": ""equal""}]}}",TRUE,NULL,NULL,NULL,NULL,14:11.9,14:12.1,NULL,NULL,KAU,"{""event"": {""name"": ""IF the flag for hazardas materials is reported and the NAICS is in 484 and the"", ""type"": 249, ""active"": true, ""params"": {""action"": [{""RCPT_MOTR_HAZRD_STAT"": ""1""}], ""message"": ""IF the flag for hazardas materials is reported   and the NAICS is in 484 and the checkbox is a missing and % - Hazardous Materials is greater than zero then set the hazardous materials checkbox to yes."", ""rvsJSON"": [""RECORD_NAICS_NUM, RCPT_MOTR_HAZRD_STAT,  RCPT_MOTR_HAZRD_PCT ""], ""apiSource"": {}, ""actionType"": ""impute"", ""apiChecked"": false}, ""ruleId"": 249, ""actionType"": ""impute"", ""rulePriority"": ""5"", ""validationType"": ""KAU""}, ""index"": -1, ""conditions"": {""all"": [{""fact"": ""checkCondition"", ""path"": ""$.value"", ""value"": true, ""params"": {""conditionstring"": ""RCPT_MOTR_HAZRD_PCT  and  substr(RECORD_NAICS_NUM, 1,3) == \""484\"" and RCPT_MOTR_HAZRD_STAT and RCPT_MOTR_HAZRD_PCT > 0""}, ""operator"": ""equal""}]}}"
252,IF the flag for hazardas materials is reported   and the NAICS is in 484 and the,,"{""event"": {""name"": ""IF the flag for hazardas materials is reported   and the NAICS is in 484 and the"", ""type"": 252, ""active"": true, ""params"": {""action"": [{""RCPT_MOTR_HAZRD_STAT"": ""1""}], ""message"": ""IF the flag for hazardas materials is reported   and the NAICS is in 484 and the checkbox is a missing and % - Hazardous Materials is greater than zero then set the hazardous materials checkbox to yes."", ""rvsJSON"": [""PAY_ANN""], ""apiSource"": {}, ""actionType"": ""impute"", ""apiChecked"": false}, ""ruleId"": 252, ""actionType"": ""impute"", ""rulePriority"": ""5"", ""validationType"": ""new""}, ""index"": -1, ""conditions"": {""all"": [{""fact"": ""checkCondition"", ""path"": ""$.value"", ""value"": true, ""params"": {""conditionstring"": ""RCPT_MOTR_HAZRD_PCT  and  substr(RECORD_NAICS_NUM, 1,3) == \""484\"" and RCPT_MOTR_HAZRD_STAT and RCPT_MOTR_HAZRD_PCT > 0""}, ""operator"": ""equal""}]}}",TRUE,NULL,NULL,NULL,NULL,05:58.4,21:50.6,NULL,NULL,new,"{""event"": {""name"": ""IF the flag for hazardas materials is reported   and the NAICS is in 484 and the"", ""type"": 252, ""active"": true, ""params"": {""action"": [{""RCPT_MOTR_HAZRD_STAT"": ""1""}], ""message"": ""IF the flag for hazardas materials is reported   and the NAICS is in 484 and the checkbox is a missing and % - Hazardous Materials is greater than zero then set the hazardous materials checkbox to yes."", ""rvsJSON"": [""PAY_ANN""], ""apiSource"": {}, ""actionType"": ""impute"", ""apiChecked"": false}, ""ruleId"": 252, ""actionType"": ""impute"", ""rulePriority"": ""5"", ""validationType"": ""new""}, ""index"": -1, ""conditions"": {""all"": [{""fact"": ""checkCondition"", ""path"": ""$.value"", ""value"": true, ""params"": {""conditionstring"": ""RCPT_MOTR_HAZRD_PCT  and  substr(RECORD_NAICS_NUM, 1,3) == \""484\"" and RCPT_MOTR_HAZRD_STAT and RCPT_MOTR_HAZRD_PCT > 0""}, ""operator"": ""equal""}]}}"
258,MD and VA PAY_ANN,"<p>If PAY_ANN &gt; 0 and MD_PAY_ANN &lt; VA_PAY_ANN, then send a message: ""PAY_ANN &gt; 0. Compute MD and VA PAY_ANN and track these facts: ['PAY_ANN']. If the rule is successful, perform the following actions: MD_PAY_ANN = agg(""PAY_ANN"", ""state = 'MD'""); VA_PAY_ANN = agg(""PAY_ANN"", ""state = 'VA'""). This rule has a priority of 5 on a scale of 1-10 and was created on Thu Jan 26 2023 13:07:29 GMT-0500 (Eastern Standard Time). Do you think we could chat on this soon? Thanks, Amit.</p>","{""event"": {""name"": ""MD and VA PAY_ANN"", ""type"": ""258"", ""active"": true, ""params"": {""rvs"": ""[\""PAY_ANN\""]"", ""action"": [{""MD_PAY_ANN"": ""agg(\""PAY_ANN\"", \""state = 'MD'\"")""}, {""VA_PAY_ANN"": ""agg(\""PAY_ANN\"", \""state = 'VA'\"")""}], ""message"": ""PAY_ANN > 0 then compute MD and VA PAY_ANN. Do you think we could chat on this soon? Thanks, Amit"", ""rvsJSON"": [""PAY_ANN""], ""apiSource"": {}, ""actionType"": ""impute"", ""apiChecked"": false}, ""ruleId"": 258, ""actionType"": ""impute"", ""rulePriority"": ""5"", ""validationType"": ""Tims Rule for Priority""}, ""index"": -1, ""conditions"": {""all"": [{""fact"": ""checkCondition"", ""path"": ""$.value"", ""value"": true, ""params"": {""conditionstring"": ""PAY_ANN > 0 and agg(\""PAY_ANN\"", \""state = 'MD'\"") < agg(\""PAY_ANN\"", \""state = 'VA'\"")""}, ""operator"": ""equal""}]}}",TRUE,NULL,NULL,NULL,NULL,10:29.5,48:14.3,NULL,NULL,Tims Rule for Priority,"{""event"": {""name"": ""MD and VA PAY_ANN"", ""type"": ""258"", ""active"": true, ""params"": {""rvs"": ""[\""PAY_ANN\""]"", ""action"": [{""MD_PAY_ANN"": ""agg(\""PAY_ANN\"", \""state = 'MD'\"")""}, {""VA_PAY_ANN"": ""agg(\""PAY_ANN\"", \""state = 'VA'\"")""}], ""message"": ""PAY_ANN > 0 then compute MD and VA PAY_ANN. Do you think we could chat on this soon? Thanks, Amit"", ""rvsJSON"": [""PAY_ANN""], ""apiSource"": {}, ""actionType"": ""impute"", ""apiChecked"": false}, ""ruleId"": 258, ""actionType"": ""impute"", ""rulePriority"": ""5"", ""validationType"": ""Tims Rule for Priority""}, ""index"": -1, ""conditions"": {""all"": [{""fact"": ""checkCondition"", ""path"": ""$.value"", ""value"": true, ""params"": {""conditionstring"": ""PAY_ANN > 0 and agg(\""PAY_ANN\"", \""state = 'MD'\"") < agg(\""PAY_ANN\"", \""state = 'VA'\"")""}, ""operator"": ""equal""}]}}"
259,IF the flag for hazardas materials is reported   and the NAICS is in 484,"<p>If (flag for hazardous materials is reported AND NAICS is in 484 AND RCPT_MOTR_HAZRD_PCT &gt; 0 AND RCPT_MOTR_HAZRD_STAT is missing) then set the hazardous materials checkbox to yes, track the facts [""PAY_ANN""] and set RCPT_MOTR_HAZRD_STAT = 1. This rule has a priority of 5 on a scale of 1-10 and was created on Thu Jan 26 2023 13:23:04 GMT-0500 (Eastern Standard Time). No API has been defined.</p>","{""event"": {""name"": ""IF the flag for hazardas materials is reported   and the NAICS is in 484"", ""type"": ""259"", ""active"": true, ""params"": {""rvs"": ""[\""PAY_ANN\""]"", ""action"": [{""RCPT_MOTR_HAZRD_STAT"": ""1""}], ""message"": ""IF the flag for hazardas materials is reported   and the NAICS is in 484 and the checkbox is a missing and % - Hazardous Materials is greater than zero then set the hazardous materials checkbox to yes."", ""rvsJSON"": [""PAY_ANN""], ""apiSource"": {}, ""actionType"": ""impute"", ""apiChecked"": false}, ""ruleId"": 259, ""actionType"": ""impute"", ""rulePriority"": ""5"", ""validationType"": ""KAU""}, ""index"": -1, ""conditions"": {""all"": [{""fact"": ""checkCondition"", ""path"": ""$.value"", ""value"": true, ""params"": {""conditionstring"": ""RCPT_MOTR_HAZRD_PCT  and  substr(RECORD_NAICS_NUM, 1,2) == \""48\"" and RCPT_MOTR_HAZRD_STAT and RCPT_MOTR_HAZRD_PCT > 0""}, ""operator"": ""equal""}]}}",TRUE,NULL,NULL,NULL,NULL,23:36.6,24:13.7,NULL,NULL,KAU,"{""event"": {""name"": ""IF the flag for hazardas materials is reported   and the NAICS is in 484"", ""type"": ""259"", ""active"": true, ""params"": {""rvs"": ""[\""PAY_ANN\""]"", ""action"": [{""RCPT_MOTR_HAZRD_STAT"": ""1""}], ""message"": ""IF the flag for hazardas materials is reported   and the NAICS is in 484 and the checkbox is a missing and % - Hazardous Materials is greater than zero then set the hazardous materials checkbox to yes."", ""rvsJSON"": [""PAY_ANN""], ""apiSource"": {}, ""actionType"": ""impute"", ""apiChecked"": false}, ""ruleId"": 259, ""actionType"": ""impute"", ""rulePriority"": ""5"", ""validationType"": ""KAU""}, ""index"": -1, ""conditions"": {""all"": [{""fact"": ""checkCondition"", ""path"": ""$.value"", ""value"": true, ""params"": {""conditionstring"": ""RCPT_MOTR_HAZRD_PCT  and  substr(RECORD_NAICS_NUM, 1,2) == \""48\"" and RCPT_MOTR_HAZRD_STAT and RCPT_MOTR_HAZRD_PCT > 0""}, ""operator"": ""equal""}]}}"
